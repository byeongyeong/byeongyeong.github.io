I"<p>Frame과 Bound의 개념을 다시 알아본다. Frame의 개념은 알고 있지만 Bound는 그렇지 않았다. Bound의 개념을 알아보고 필요할 때마다 꺼내보기 위해 정리하려한다.</p>

<h2 id="frame과-bound">Frame과 Bound</h2>
<p>먼저 Frame과 Bound를 한 줄로 정리해보면 아래와 같다.</p>

<blockquote>
  <p>Frame: superView의 좌표시스템을 기준으로 결정되는 origin, size(CGRect)<br />
Bound: 자신(view)의 좌표시스템을 기준으로 결정되는 origin, size(CGRect)</p>
</blockquote>

<p>Frame은 일반적으로 우리가 생각하는 좌표시스템이기 때문에 받아들이는데 부담이 없다.
하지만 Bound는 조금 다르다. 정확히는 Bound의 origin이 조금 까다롭다.
UIScrollView의 contentOffset, contentInset 변경에 따른 Bound origin 값의 변화를 보고 있자면 이해가 잘 가지 않는다.
퇴근길에 여러 글과 예제를 보고 스스로 내린 결론은 아래와 같다.</p>

<blockquote>
  <p>Bound의 origin을 바꾸는 것<br />
= 자신의 좌표시스템 기준점을 바꾸는 것<br />
= viewport를 이동시키는 것</p>
</blockquote>

<h2 id="bound의-origin--자신의-좌표시스템-기준점">Bound의 origin = 자신의 좌표시스템 기준점</h2>
<p>먼저 <code class="highlighter-rouge">자신의 좌표시스템 기준점을 바꾸는 것</code>은 무엇을 의미할까?
일단 Bound가 자기자신의 좌표시스템이기 때문에 origin(기원)을 바꿔도 스스로에게는 아무런 영향이 없다.
좌표시스템에 포함되어있는 subView들이 영향을 받을 뿐이다. 2차원 평면 상에서 한 점이 있을 때, xy축이 이동하는 것과 같은 개념이라고 보면 된다.
2차원 평면 상의 한 점은 가만히 있고 xy축이 움직이면, 축의 변위만큼 점이 이동한 것처럼 보일 것이다. 실제로 Bound의 origin을 바꾸면 subView가 움직이는 것처럼 보인다.</p>

<h2 id="bound의-origin--viewport">Bound의 origin = viewport</h2>
<p>그럼 <code class="highlighter-rouge">viewport를 이동시키는 것</code> 이라는 말도 쉽게 이해가 간다.
먼저 viewport의 사전적 정의는 <code class="highlighter-rouge">화면상 표시 영역</code> 이다.</p>

<p>위에서 예시로 든 xy축을 더 써먹어보자. 원점을 기준으로 특정 영역(=표시 영역)이 있다고 했을 때,
xy축이 이동하면서 그 영역 안에 포함되는 부분도 있고 벗어나는 부분도 있다.
이 특정 영역을 viewport라고 했을 때 포함되는 부분은 보여질 것이고 벗어나는 부분은 안 보이게 될 것이다.</p>

<p>이는 UIScrollView에서 스크롤하는 것과 동일하다고 볼 수 있다.
스크롤을 하게 되면 Bound의 origin이 변하면서 UIScrollView 내에서 보여지는 영역(viewport)이 바뀌는 것 뿐이지 content의 위치가 변하는게 아니다.</p>

<blockquote>
  <p>결국 Bound의 origin을 변경한다는 것은 뷰의 좌표시스템 화면에 보여지는 영역을 이동시키는 것이다.</p>
</blockquote>

<p><br /></p>
<p align="center">
   <img src="../images/2021-05-03-til-20210503/1.jpg" />
</p>
<p><br /></p>

<p>추가로 UIScrollView의 contentOffset도 같은 개념이다.
공식문서에서 contentOffset은 <code class="highlighter-rouge">스크롤 뷰의 origin으로부터 떨어져 있는(offset) content view의 origin point</code> 라고 적혀있다(초월 번역).
스크롤 뷰의 origin(= Bound origin)이 변하면 offset 값이 바뀌기 때문에 contentOffset 값도 바뀔 것이다. vertical scrollView를 기준으로
아래로 스크롤을 하면 Bound origin y값이 커지고 마찬가지로 contentOffset y값이 커질 것이다.</p>

<h2 id="uiview의-회전">UIView의 회전</h2>
<p>Bound의 size는 Frame size와 약간 다르다. 그 차이점은 UIView를 회전시키면 알 수 있다.
UIView를 회전시키면 UIView의 Bound size는 그대로다. Bound란 자기 자신의 좌표시스템을 기준으로 하는 값이기 때문에 수백수천번 돌려봐야 그 값은 그대로일 것이다. 하지만 Frame size는 다르다. Frame은 superView의 좌표시스템을 기준으로 결정되기 때문에, 회전하게 되면 superView의 좌표시스템 내에서 
UIView가 그려지는 최소범위의 직사각형만큼 Frame의 origin과 size가 모두 바뀌게 된다.</p>

<h2 id="결론">결론</h2>
<p>Bound 개념을 이해한 것 같지만 이젠 ContentInset가 와닿지 않는다. 다음 번엔 ContentInset을 정리해볼 예정이다.</p>
:ET